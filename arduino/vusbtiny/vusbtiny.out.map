Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o (exit)
/usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eerd_byte_attiny25.o)
                              main.o (__eerd_byte_tn25)
/usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eewr_byte_attiny25.o)
                              main.o (__eewr_byte_tn25)

Allocating common symbols
Common symbol       size              file

usb_tx_len          0x1               usbtiny/usb.o
usb_tx_buf          0xb               usbtiny/usb.o
usb_new_address     0x1               usbtiny/usb.o
usb_rx_token        0x1               usbtiny/usb.o
usb_rx_len          0x1               usbtiny/usb.o
usb_rx_off          0x1               usbtiny/usb.o
usb_rx_buf          0x16              usbtiny/usb.o
usb_address         0x1               usbtiny/usb.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
LOAD /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libm.a
LOAD main.o
LOAD usbtiny/usb.o
LOAD usbtiny/crc.o
LOAD usbtiny/int.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x8cc
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000001e       0x3e usbtiny/usb.o
                0x0000000000000046                string_device
 .progmem.crc   0x000000000000005c       0x10 usbtiny/crc.o
                0x000000000000006c                . = ALIGN (0x2)
                0x000000000000006c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000006c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000006c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000006c                __ctors_start = .
 *(.ctors)
                0x000000000000006c                __ctors_end = .
                0x000000000000006c                __dtors_start = .
 *(.dtors)
                0x000000000000006c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000006c        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
                0x000000000000006c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000006c        0x8 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x4 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
 *(.init9)
 *(.text)
 .text          0x000000000000009e        0x2 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
                0x000000000000009e                __vector_12
                0x000000000000009e                __bad_interrupt
                0x000000000000009e                __vector_6
                0x000000000000009e                __vector_3
                0x000000000000009e                __vector_11
                0x000000000000009e                __vector_13
                0x000000000000009e                __vector_7
                0x000000000000009e                __vector_5
                0x000000000000009e                __vector_4
                0x000000000000009e                __vector_9
                0x000000000000009e                __vector_2
                0x000000000000009e                __vector_8
                0x000000000000009e                __vector_14
                0x000000000000009e                __vector_10
 .text          0x00000000000000a0      0x2fa main.o
                0x0000000000000152                usbFunctionRead
                0x0000000000000190                usbFunctionWrite
                0x0000000000000222                usbFunctionSetup
                0x0000000000000316                usbEventResetReady
 .text          0x000000000000039a        0x0 usbtiny/usb.o
 .text          0x000000000000039a       0x4a usbtiny/crc.o
                0x000000000000039a                crc
 .text          0x00000000000003e4      0x2ae usbtiny/int.o
                0x00000000000003e4                __vector_1
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eerd_byte_attiny25.o)
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eewr_byte_attiny25.o)
                0x0000000000000692                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000692       0x44 main.o
                0x0000000000000692                main
 .text.usb_init
                0x00000000000006d6       0x10 usbtiny/usb.o
                0x00000000000006d6                usb_init
 .text.usb_poll
                0x00000000000006e6      0x1b6 usbtiny/usb.o
                0x00000000000006e6                usb_poll
 .text.libgcc.mul
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000089c        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000089c       0x10 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eerd_byte_attiny25.o)
                0x000000000000089c                __eerd_byte_tn25
 .text.avr-libc
                0x00000000000008ac       0x1c /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eewr_byte_attiny25.o)
                0x00000000000008ac                __eewr_byte_tn25
                0x00000000000008ae                __eewr_r18_tn25
                0x00000000000008c8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000008c8        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
                0x00000000000008c8                exit
                0x00000000000008c8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000008c8        0x4 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000008cc                _etext = .

.data           0x0000000000800060        0x4 load address 0x00000000000008cc
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
 .data          0x0000000000800060        0x1 main.o
 .data          0x0000000000800061        0x0 usbtiny/usb.o
 .data          0x0000000000800061        0x0 usbtiny/crc.o
 .data          0x0000000000800061        0x2 usbtiny/int.o
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eerd_byte_attiny25.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eewr_byte_attiny25.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800064                . = ALIGN (0x2)
 *fill*         0x0000000000800063        0x1 
                0x0000000000800064                _edata = .
                0x0000000000800064                PROVIDE (__data_end, .)

.bss            0x0000000000800064       0x3b
                0x0000000000800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
 .bss           0x0000000000800064        0xf main.o
 .bss           0x0000000000800073        0x4 usbtiny/usb.o
 .bss           0x0000000000800077        0x0 usbtiny/crc.o
 .bss           0x0000000000800077        0x1 usbtiny/int.o
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eerd_byte_attiny25.o)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eewr_byte_attiny25.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800078       0x27 usbtiny/usb.o
                0x0000000000800078                usb_tx_len
                0x0000000000800079                usb_tx_buf
                0x0000000000800084                usb_new_address
                0x0000000000800085                usb_rx_token
                0x0000000000800086                usb_rx_len
                0x0000000000800087                usb_rx_off
                0x0000000000800088                usb_rx_buf
                0x000000000080009e                usb_address
                0x000000000080009f                PROVIDE (__bss_end, .)
                0x00000000000008cc                __data_load_start = LOADADDR (.data)
                0x00000000000008d0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080009f        0x0
                0x000000000080009f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080009f                PROVIDE (__noinit_end, .)
                0x000000000080009f                _end = .
                0x000000000080009f                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x30a8
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o
 .stab          0x00000000000006b4      0xe64 main.o
                                        0xe70 (size before relaxing)
 .stab          0x0000000000001518      0x8c4 usbtiny/usb.o
                                        0xa80 (size before relaxing)
 .stab          0x0000000000001ddc      0x1d4 usbtiny/crc.o
                                        0x1e0 (size before relaxing)
 .stab          0x0000000000001fb0      0xf84 usbtiny/int.o
                                        0xf90 (size before relaxing)
 .stab          0x0000000000002f34       0x90 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eerd_byte_attiny25.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000002fc4       0xe4 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/libc.a(eewr_byte_attiny25.o)
                                         0xf0 (size before relaxing)

.stabstr        0x0000000000000000     0x1614
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1614 /usr/lib/gcc/avr/4.8.0/../../../../avr/lib/crttn25.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 usbtiny/usb.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(vusbtiny.out elf32-avr)
LOAD linker stubs
